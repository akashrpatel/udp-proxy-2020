FROM ubuntu:20.04 as base
ENV DEBIAN_FRONTEND=noninteractive

# base applications
RUN apt-get update && apt-get install -y tzdata wget make git flex bison

# all our cross compile stuff
RUN apt-get install -y \
    binutils-arm-linux-gnueabihf \
    linux-libc-dev-armhf-cross \
    gccgo-10-arm-linux-gnueabihf \
    gcc-10-arm-linux-gnueabihf \
    golang-1.14-go \
    libgo14-armhf-cross \
    libgcc-10-dev-armhf-cross \
    libc6-armhf-cross \
    libc6-dev-armhf-cross

RUN mkdir -p /build/bin && cd /build/bin && \
    ln -s /usr/bin/arm-linux-gnueabihf-gccgo-10 gccgo && \
    ln -s /usr/bin/arm-linux-gnueabihf-gcc-ar-10 ar && \
    ln -s /usr/bin/arm-linux-gnueabihf-gcc-ranlib-10 ranlib && \
    ln -s /usr/bin/arm-linux-gnueabihf-gcc-10 gcc

# build libpcap
FROM base as libpcap
ENV LIBPCAP_VERSION=1.9.1
WORKDIR /build
RUN wget -qO - https://www.tcpdump.org/release/libpcap-${LIBPCAP_VERSION}.tar.gz | tar zxf -
WORKDIR /build/libpcap-${LIBPCAP_VERSION}
RUN CC=/build/bin/gcc BUILD_CC=gcc AR=/build/bin/ar  RANLIB=/build/bin/ranlib \
        ./configure --build i686-pc-linux-gnu --host arm-linux-gnueabihf --prefix=/usr/arm-linux-gnueabihf && make install

# build our app
FROM libpcap
WORKDIR /build/udp-proxy-2020
ENTRYPOINT PATH=/build/bin:/usr/lib/go-1.14/bin:${PATH} GOROOT=/usr/lib/go-1.14 make .linux-arm32hf
